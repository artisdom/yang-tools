<?xml version="1.0" encoding="UTF-8"?>
<submodule name="bird-nest"
	xmlns="urn:ietf:params:xml:ns:yang:yin:1"
	xmlns:h="http://www.w3.org/1999/xhtml">
  <belongs-to module="bird">
    <prefix value="bird"/>
  </belongs-to>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="ietf-routing">
    <prefix value="rt"/>
  </import>

  <description>
    <text>
      This module defines configuration data, RPCs and features that
      are common to all routing protocols.
    </text>
  </description>

  <!-- Features -->

  <feature name="mrtdump">
    <description>
      <text>
	Indicates support for MRTdump.
      </text>
    </description>
  </feature>

  <feature name="route-origin">
    <description>
      <text>
	Indicates operating system support for identification of route
	origin.
      </text>
    </description>
  </feature>

  <!-- Groupings -->

  <grouping name="universal-route-attributes">
    <description>
      <text>Set of universal (protocol-idenpendent) route
      attributes.</text>
    </description>
    <leaf name="filtered">
      <type name="boolean"/>
      <description>
	<text>This flag is used for indicating that the parent route
	didn't pass the import filter. Depending on the setting of the
	protocol option 'import-keep-filtered', filtered routes may be
	discarded or retained but labeled as filtered using this
	attribute.</text>
      </description>
    </leaf>
  </grouping>

  <grouping name="protocol-debugging">
    <description>
      <text>
	<h:p>Protocol debugging options.</h:p>
	<h:p>This grouping is used in global and protocol configuration.</h:p>
      </text>
    </description>
    <choice name="protocol-debugging-options">
      <description>
	<text>
	  Select all or none, or an explicit list of debug types.
	</text>
      </description>
      <default value="none"/>
      <leaf name="none">
	<type name="empty"/>
	<description>
	  <text>No debugging. This is the default.</text>
	</description>
      </leaf>
      <leaf name="all">
	<type name="empty"/>
	<description>
	  <text>Turn on all types of debugging.</text>
	</description>
      </leaf>
      <leaf-list name="type">
	<description>
	  <text>Each entry turns on one type of debug messages.</text>
	</description>
	<type name="enumeration">
	  <enum name="states">
	    <description>
	      <text>protocol state changes</text>
	    </description>
	  </enum>
	  <enum name="routes">
	    <description>
	      <text>routes exchanged with the connected RIB</text>
	    </description>
	  </enum>
	  <enum name="filters">
	    <description>
	      <text>route filtering</text>
	    </description>
	  </enum>
	  <enum name="interfaces">
	    <description>
	      <text>protocol-related events on interfaces</text>
	    </description>
	  </enum>
	  <enum name="events">
	    <description>
	      <text>protocol's internal events</text>
	    </description>
	  </enum>
	  <enum name="packets">
	    <description>
	      <text>protocol packets (sent and received)</text>
	    </description>
	  </enum>
	</type>
      </leaf-list>
    </choice>
  </grouping>

  <grouping name="mrtdump">
    <description>
      <text>
	<h:p>MRTdump options.</h:p>
	<h:p>This grouping is used in global and protocol configuration.</h:p>
      </text>
    </description>
    <choice name="mrtdump-options">
      <description>
	<text>
	  Select all or none, or an explicit list of MRTdump types.
	</text>
      </description>
      <default value="none"/>
      <leaf name="none">
	<type name="empty"/>
	<description>
	  <text>No MRTdump messages. This is the default.</text>
	</description>
      </leaf>
      <leaf name="all">
	<type name="empty"/>
	<description>
	  <text>Turn on all types of MRTdump messages.</text>
	</description>
      </leaf>
      <leaf-list name="type">
	<description>
	  <text>Each entry turns on one type of MRTdump messages.</text>
	</description>
	<type name="enumeration">
	  <enum name="states">
	    <description>
	      <text>state changes</text>
	    </description>
	  </enum>
	  <enum name="messages">
	    <description>
	      <text>protocol messages</text>
	    </description>
	  </enum>
	</type>
      </leaf-list>
    </choice>
  </grouping>

  <grouping name="common-protocol-data">
    <description>
      <text>
	Common configuration parameters of BIRD protocols.
      </text>
    </description>
    <grouping name="protocol-route-limit">
      <description>
	<text>
	  Common configuration data for route limits.
	</text>
      </description>
      <leaf name="limit">
	<type name="uint32"/>
	<mandatory value="true"/>
	<description>
	  <text>Maximum number of routes</text>
	</description>
      </leaf>
      <leaf name="action">
	<type name="enumeration">
	  <enum name="warn">
	    <description>
	      <text>Print a warning log message.</text>
	    </description>
	  </enum>
	  <enum name="block">
	    <description>
	      <text>Discard excessive routes.</text>
	    </description>
	  </enum>
	  <enum name="restart">
	    <description>
	      <text>Restart the routing protocol instance.</text>
	    </description>
	  </enum>
	  <enum name="disable">
	    <description>
	      <text>Disable the routing protocol instance.</text>
	    </description>
	  </enum>
	</type>
	<default value="disable"/>
	<description>
	  <text>Action to perform if the limit is reached.</text>
	</description>
      </leaf>
    </grouping>
    <leaf name="rib">
      <type name="leafref">
	<path value="../../../rt:ribs/rt:rib/rt:name"/>
      </type>
      <description>
	<text>
	  <h:p>The RIB to which the routing protocol instance is
	  connected.</h:p>
	  <h:p>If this leaf is not present, the protocol instance is
	  connected to the default RIB.</h:p>
	</text>
      </description>
    </leaf>
    <container name="debug">
      <description>
	<text>Protocol debugging options.</text>
      </description>
      <uses name="protocol-debugging"/>
    </container>
    <container name="mrtdump">
      <if-feature name="mrtdump"/>
      <description>
	<text>MRTdump options.</text>
      </description>
      <uses name="mrtdump"/>
    </container>
    <leaf name="import-keep-filtered">
      <type name="boolean"/>
      <default value="false"/>
      <description>
	<text>
	  This flag controls whether filtered routes are
	  discarded or just labeled as filtered (using the 'filtered'
	  route attribute) and kept in the protocol routing table.
	</text>
      </description>
    </leaf>
    <container name="import-limit">
      <presence value="Set the import limit"/>
      <description>
	<text>
	  <h:p>Maximum number of imported routes.</h:p>
	  <h:p>If the 'import-keep-filtered' flag is true, the routes
	  with the 'filtered' attribute are not counted towards this
	  limit.</h:p>
	</text>
      </description>
      <uses name="protocol-route-limit"/>
    </container>
    <container name="receive-limit">
      <presence value="Set the receive limit"/>
      <description>
	<text>
	  <h:p>Maximum number of received routes.</h:p>
	  <h:p>If the 'import-keep-filtered' flag is true, the routes
	  with the 'filtered' attribute are counted towards this
	  limit.</h:p>
	</text>
      </description>
      <uses name="protocol-route-limit"/>
    </container>
    <container name="export-limit">
      <presence value="Set the export limit"/>
      <description>
	<text>
	  <h:p>Maximum number of exported routes.</h:p>
	  <h:p>If the 'import-keep-filtered' flag is true, the routes
	  with the 'filtered' attribute are counted towards this
	  limit.</h:p>
	</text>
      </description>
      <uses name="protocol-route-limit"/>
    </container>
  </grouping>

  <grouping name="protocol-interfaces">
    <description>
      <text>
	This grouping is used in the configuration of routing protocol
	instances.
      </text>
    </description>
    <container name="interfaces">
      <description>
	<text>Configuration of router interfaces participating in the
	routing protocol instance.</text>
      </description>
      <list name="interface">
	<key value="name"/>
	<leaf name="name">
	  <type name="leafref">
	    <path value="../../../../../rt:interfaces/rt:interface/rt:name"/>
	  </type>
	</leaf>
      </list>
    </container>
  </grouping>

  <grouping name="rip-ospf-passwords">
    <description>
      <text>
	<h:p>Password configuration options for RIP and OSPF protocols.</h:p>
	<h:p>If multiple passwords are configured, it is up to the
	protocol implementation to decide which one is used.</h:p>
	<h:p>Configuring one or more passwords doesn't automatically
	mean that they are really used. Authentication has to be
	enabled separately using the protocol-specific
	'authentication' parameter.</h:p>
      </text>
    </description>
    <container name="passwords">
      <description>
	<text>Configured passwords.</text>
      </description>
      <list name="password">
	<key value="id"/>
	<description>
	  <text>Password entry.</text>
	</description>
	<leaf name="id">
	  <type name="uint8"/>
	  <description>
	    <text>
	      <h:p>Unique identifier of the password entry.</h:p>
	      <h:p>Some protocols use this value for identifying the
	      password that is used for authenticating protocol
	      packets.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="text">
	  <type name="string"/>
	  <mandatory value="true"/>
	  <description>
	    <text>The password in clear text.</text>
	  </description>
	</leaf>
	<leaf name="generate-from">
	  <type name="yang:date-and-time"/>
	  <description>
	    <text>Start of the time interval in which the password may
	    be used for packet signing.</text>
	  </description>
	</leaf>
	<leaf name="generate-to">
	  <type name="yang:date-and-time"/>
	  <description>
	    <text>End of the time interval in which the password may
	    be used for packet signing.</text>
	  </description>
	</leaf>
	<leaf name="accept-from">
	  <type name="yang:date-and-time"/>
	  <description>
	    <text>Start of the time interval in which the password may
	    be used for packet verification.</text>
	  </description>
	</leaf>
	<leaf name="accept-to">
	  <type name="yang:date-and-time"/>
	  <description>
	    <text>End of the time interval in which the password may
	    be used for packet verification.</text>
	  </description>
	</leaf>
      </list>
    </container>
  </grouping>

  <!-- RPC methods -->

  <augment target-node="/rt:fib-route/rt:output/rt:route">
    <description>
      <text>Add universal route attributes.</text>
    </description>
    <uses name="universal-route-attributes"/>
  </augment>

  <rpc name="reload">
    <description>
      <text>
	Reload the specified protocol instance(s). The result of the
	reload operation is that routes are reimported from the
	protocol instance and/or active routes are reexported to the
	protocol instance.
      </text>
    </description>
    <input>
      <leaf name="router">
	<type name="rt:routing-instance-state-ref"/>
	<mandatory value="true"/>
	<description>
	  <text>The name of a router instance. The protocol
	  instances to be reloaded must all reside in this
	  router.</text>
	</description>
      </leaf>
      <leaf name="direction">
	<type name="enumeration">
	  <enum name="in"/>
	  <enum name="out"/>
	  <enum name="both"/>
	</type>
	<default value="both"/>
	<description>
	  <text>
	    <h:p>Control the direction in which the routes are resent
	    during the reload:</h:p>
	    <h:ul>
	      <h:li>'in': reimport the routes from each protocol
	      instance to the connected RIB;</h:li>
	      <h:li>'out': reexport the active routes from the
	      connected RIB to the protocol instance;</h:li>
	      <h:li>'both' (default): perform both 'in' and
	      'out'.</h:li>
	    </h:ul>
	  </text>
	</description>
      </leaf>
      <container name="protocol-instances">
	<presence value="explicit protocol selection"/>
	<description>
	  <text>
	    If this container is present, only the listed protocol
	    instances are reloaded. Otherwise, all protocol instances
	    in the router are reloaded.
	  </text>
	</description>
	<leaf-list name="protocol-instance">
	  <type name="leafref">
	    <path
		value="/rt:routing/rt:routing-instance/rt:routing-protocols/rt:routing-protocol/rt:name"/>
	  </type>
	  <description>
	    <text>
	      The names of the protocols to be reloaded.
	    </text>
	  </description>
	</leaf-list>
      </container>
    </input>
   </rpc>

  <!-- Data nodes -->

  <augment
      target-node="/rt:routing/rt:routing-instance/rt:routing-protocols/rt:routing-protocol">
    <uses name="common-protocol-data"/>
  </augment>

  <augment
      target-node="/rt:routing-state/rt:routing-instance/rt:ribs/rt:rib/rt:routes/rt:route">
    <description>
      <text>Add universal route attributes.</text>
    </description>
    <uses name="universal-route-attributes"/>
  </augment>

  <augment
      target-node="/rt:routing/rt:routing-instance/bird:bird-config">
    <if-feature name="mrtdump"/>
    <container name="mrtdump">
      <description>
	<text>Global MRTdump configuration.</text>
      </description>
      <presence value="enable mrtdump"/>
      <leaf name="enabled">
	<type name="boolean"/>
	<default value="true"/>
	<description>
	  <text>Enable MRTdump.</text>
	</description>
      </leaf>
      <leaf name="file">
	<type name="string"/>
	<mandatory value="true"/>
	<description>
	  <text>Name of the file for storing MRTdump messages.</text>
	</description>
      </leaf>
      <container name="global-options">
	<description>
	  <text>Global MRTdump options.</text>
	</description>
	<uses name="mrtdump"/>
      </container>
    </container>
    <container name="bgp-listen">
      <description>
	<text>
	  Configure the listening socket for all BGP
	  instances.
	</text>
      </description>
      <!-- TODO -->
    </container>
  </augment>

  <augment
      target-node="/rt:routing/rt:routing-instance/bird:bird-config/bird:debugging">
    <container name="protocols">
      <description>
	<text>Global protocol debugging configuration.</text>
      </description>
      <container name="global-options">
	<description>
	  <text>Global protocol debugging options.</text>
	</description>
	<uses name="protocol-debugging"/>
      </container>
    </container>
  </augment>

</submodule>
